{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAOC,SAASC,cAAc,SAGpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAXPL,EAAKa,iBAAiB,UAetB,SAAkBC,GAChBA,EAAMC,iBACN,IAAMC,EAAaC,OAAOjB,EAAKkB,SAASb,MAAMc,OACxCC,EAAOH,OAAOjB,EAAKkB,SAASE,KAAKD,OACjCE,EAASJ,OAAOjB,EAAKkB,SAASG,OAAOF,OAE3C,GAAIC,EAAO,GAAKJ,EAAa,GAAKK,GAAU,EAE1C,YADAC,EAAAxB,GAASyB,OAAOC,QAAQ,qGAI1B,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAQI,GAAK,EAAG,CAEnCtB,EAAcsB,EADe,IAANA,EAAUT,EAAaA,GAAcS,EAAE,GAAKL,GAEhEM,MAAK,SAAAC,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MACjBiB,EAAAxB,GAASyB,OAAOK,QAAQ,uBAAwCC,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M,IAEvEyB,OAAM,SAAAH,G,IAAGvB,EAAQuB,EAARvB,SAAUC,EAAKsB,EAALtB,MAClBiB,EAAAxB,GAASyB,OAAOC,QAAQ,sBAAqCK,OAAfzB,EAAS,QAAYyB,OAANxB,EAAM,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmit);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(form.elements.delay.value);\n  const step = Number(form.elements.step.value);\n  const amount = Number(form.elements.amount.value);\n\n  if (step < 0 || firstDelay < 0 || amount <= 0) {\n    Notiflix.Notify.failure('Invalid input values. Please make sure Delay step is >= 0, firstDelay is >= 0, and amount is > 0.');\n    return;\n  }\n\n  for (let i = 1; i <= amount; i += 1) {\n      const currentDelay = i === 1 ? firstDelay : firstDelay + (i-1) * step;\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","firstDelay","Number","elements","value","step","amount","$parcel$interopDefault","Notify","failure","i","then","param","success","concat","catch"],"version":3,"file":"03-promises.c4fb73c3.js.map"}